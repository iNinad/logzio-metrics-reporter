pipeline {
    agent any
    environment {
        NA_TOKEN = credentials('LOGZ_NA_TOKEN') // Securely fetch NA token
        EU_TOKEN = credentials('LOGZ_EU_TOKEN') // Securely fetch EU token
    }
    parameters {
        string(name: 'DATE', defaultValue: '2025-01-20', description: 'Enter the base date (YYYY-MM-DD)')
        string(name: 'START_TIME', defaultValue: '08:00:00Z', description: 'Enter the start time (HH:mm:ssZ)')
        string(name: 'END_TIME', defaultValue: '10:00:00Z', description: 'Enter the end time (HH:mm:ssZ)')
        string(name: 'TIME_RANGE', defaultValue: '14', description: 'Number of days before and after the base date')
    }
    stages {
        stage('Checkout Current Repository') {
            steps {
                echo '[INFO] Checking out repository containing script.py...'
                checkout scm
            }
        }
        stage('Checkout oas-deployment Repository') {
            steps {
                echo '[INFO] Checking out oas-deployment repository for customers.yaml...'
                dir('oas-deployment') {
                    checkout([$class: 'GitSCM',
                        branches: [[name: '*/main']], // Replace 'main' with the appropriate branch if different
                        extensions: [
                            [$class: 'SparseCheckoutPaths', paths: ['customers.yaml']] // Sparse checkout for just `customers.yaml`
                        ],
                        userRemoteConfigs: [[url: 'git@git.cias.one:tid/oas-deployment']]
                    ])
                }
            }
        }
        stage('Setup Python Environment') {
            steps {
                echo '[INFO] Setting up Python environment...'
                sh '''
                python3 -m venv venv
                source venv/bin/activate
                pip install -r requirements.txt
                '''
            }
        }
        stage('Run Script') {
            steps {
                echo '[INFO] Running Python script...'
                sh '''
                source venv/bin/activate
                python logz_metrics_handler.py \
                    --date ${DATE} \
                    --start_time ${START_TIME} \
                    --end_time ${END_TIME} \
                    --time_range ${TIME_RANGE} \
                    --eu_token "$EU_TOKEN" \
                    --na_token "$NA_TOKEN" \
                    --customers_file "oas-deployment/customers.yaml"
                '''
            }
        }
        stage('Archive Results') {
            steps {
                echo '[INFO] Archiving output.csv as a build artifact...'
                archiveArtifacts artifacts: 'output.csv', fingerprint: true
            }
        }
    }
    post {
        always {
            echo '[INFO] Cleaning up workspace...'
            cleanWs()
        }
        success {
            echo '[SUCCESS] Pipeline completed successfully!'
        }
        failure {
            echo '[ERROR] Pipeline failed!'
        }
    }
}